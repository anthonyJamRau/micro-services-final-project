<!doctype html>
<html lang="en">

<head>
  <title>Blackjack Simulation</title>
  <style>
    @import url(https://fonts.googleapis.com/css?family=Roboto:500);
    body {
      font-family: "Roboto";
      margin: 0;
      padding: 0;
      background-color: #2c3e50;
      color: #ecf0f1;
      text-align: center;
    }

    h3 {
      margin-top: 20px;
    }

    .btn {
      background-color: #3498db;
      border: none;
      color: white;
      padding: 10px 20px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      font-size: 16px;
      margin: 5px;
      cursor: pointer;
      border-radius: 5px;
    }

    .btn:hover {
      background-color: #2980b9;
    }

    .card {
      font-size: 20px;
      margin: 10px auto;
      padding: 10px;
      border: 2px solid #ecf0f1;
      border-radius: 5px;
      display: inline-block;
      background-color: #34495e;
      color: #ecf0f1;
    }

    .container {
      margin-top: 30px;
    }
  </style>
</head>

<body>
  <h3>Blackjack Simulation</h3>

  {% if not google_data %}
    <p>You are not logged in. Click below to sign in with Google.</p>
    <a href="/login" class="btn">Sign in with Google</a>
  {% else %}
    <p>Welcome, {{ google_data.name }}! (<strong>{{ google_data.email }}</strong>)</p>
    <div class="container">
      <button id="deal-btn" class="btn">Deal Card</button>
      <button id="reset-btn" class="btn">Reset Game</button>

      <div id="card-container" class="card" style="display:none;"></div>
      <p id="count" style="margin-top: 10px; font-size: 18px;"></p>
    </div>
  {% endif %}

  <script>
    document.addEventListener('DOMContentLoaded', function () {
    const dealBtn = document.getElementById('deal-btn');
    const resetBtn = document.getElementById('reset-btn');
    const cardContainer = document.getElementById('card-container');
    const countDisplay = document.getElementById('count');

    dealBtn?.addEventListener('click', async () => {
        try {
        const response = await fetch('/deal');
        const data = await response.json();

        if (data.card_dealt) {
            cardContainer.style.display = 'block';
            cardContainer.innerHTML = `Card Dealt: ${data.card_dealt}`;
            countDisplay.textContent = `Current Count: ${data.current_count}`;
        } else {
            cardContainer.innerHTML = '<strong>No cards left in the shoe!</strong>';
        }
        } catch (error) {
        console.error('Error fetching card:', error);
        }
    });

    resetBtn?.addEventListener('click', async () => {
        try {
        const response = await fetch('/reset', { method: 'POST' });
        const data = await response.json();

        cardContainer.style.display = 'none';
        countDisplay.textContent = '';
        alert(data.message);
        } catch (error) {
        console.error('Error resetting game:', error);
        }
    });
    });
  </script>
</body>

</html>
